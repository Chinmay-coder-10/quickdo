{"version":3,"sources":["components/Docs.js","components/Weatherinfo.jsx","components/Home.jsx","components/Navbar.js","components/App.js","index.js"],"names":["Docs","Weatherinfo","temp","name","country","className","Home","useState","isListening","setisListening","showingweather","setshowingweather","weatherinfo","setweatherinfo","text","settext","mic","window","SpeechRecognition","webkitSpeechRecognition","continuous","lang","useEffect","handlelisten","start","onstart","console","log","onresult","event","current","resultIndex","transcript","results","commands","onerror","error","includes","readOut","city","split","splice","join","getwather","a","url","fetch","response","json","data","sys","main","pressure","message","speech","SpeechSynthesisUtterance","volume","pitch","speechSynthesis","speak","onClick","prevState","stop","onend","style","fontFamily","Navbar","exact","to","type","id","App","path","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e0ce4f8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Docs = () => {\r\n    return (\r\n        <>\r\n            <h1>How to use</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Docs\r\n","import React from 'react'\r\nimport \"../css/weatherinfo.css\"\r\n\r\nconst Weatherinfo = ({ temp, name, country }) => {\r\n    return (\r\n        <>\r\n            <div className=\"weather-main\">\r\n                <h4>{name}, {country}</h4>\r\n                <h1>{temp} Â°C</h1>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weatherinfo\r\n","import React, { useState, useEffect } from 'react'\r\nimport Weatherinfo from './Weatherinfo';\r\nimport \"../css/weatherinfo.css\"\r\nimport \"../css/home.css\"\r\n\r\n\r\nconst Home = () => {\r\n    const [isListening, setisListening] = useState(false);\r\n    const [showingweather, setshowingweather] = useState(false);\r\n    const [weatherinfo, setweatherinfo] = useState(\"\");\r\n    const [text, settext] = useState(\"\");\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const mic = new SpeechRecognition();\r\n\r\n    mic.continuous = true;\r\n    // mic.interimResults = true;\r\n    mic.lang = 'en-in';\r\n    useEffect(() => {\r\n        handlelisten();\r\n        // eslint-disable-next-line\r\n    }, [isListening]);\r\n\r\n    // Handle the listening\r\n    const handlelisten = () => {\r\n        if (isListening) {\r\n            mic.start();\r\n            mic.onstart = () => {\r\n                console.log(\"Listening\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlepause = () => {\r\n        console.log(\"Stopping mic\");\r\n        mic.stop();\r\n        mic.onend = () => { console.log(\"Stopped mic\"); }\r\n    }\r\n    mic.onresult = (event) => {\r\n        const current = event.resultIndex;\r\n        const transcript = event.results[current][0].transcript\r\n        // const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\r\n        settext(transcript)\r\n        commands(transcript);\r\n        mic.onerror = event => {\r\n            console.log(event.error)\r\n        }\r\n    }\r\n    const commands = (transcript) => {\r\n        if (transcript.includes(\"hello\")) {\r\n            readOut(\"hi, how are you\")\r\n        }\r\n        else if (transcript.includes(\"weather of\")) {\r\n            let city = transcript.split(\"\");\r\n            console.log(\"Splited\", city);\r\n            city.splice(0, 11)\r\n            console.log(\"After splice\", city);\r\n            city = city.join(\"\");\r\n            console.log(`${city} is city`);\r\n            getwather(city, transcript);\r\n\r\n        }\r\n    }\r\n\r\n    const getwather = async (city) => {\r\n        try {\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=4b436c0e79898d1bf10b8cd1e7297b02`\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            const { name } = data;\r\n            const { country } = data.sys;\r\n            const { temp, pressure } = data.main;\r\n            // const pressure = data.main.pressure;\r\n            readOut(`Weather of ${city} is  ${temp} degree celsius`);\r\n            const mynewweatherinfo = { temp, pressure, name, country }\r\n            setweatherinfo(mynewweatherinfo);\r\n            setshowingweather(true)\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n        }\r\n    }\r\n    // Speak function\r\n    const readOut = (message) => {\r\n        let speech = new SpeechSynthesisUtterance();\r\n        speech.text = message;\r\n        speech.volume = 1;\r\n        speech.pitch = 1;\r\n        window.speechSynthesis.speak(speech);\r\n        console.log(\"Speaked\");\r\n    }\r\n\r\n    // // create a new message\r\n    // function createMsg(who, msg) {\r\n    //     let newmsg = document.createElement(\"p\");\r\n    //     newmsg.innerText = msg;\r\n    //     newmsg.setAttribute(\"class\", who);\r\n    //     msgs.appendChild(newmsg);\r\n    // }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <button className=\"btn btn-success m-2\" onClick={() => {\r\n                    setisListening(prevState => !prevState)\r\n                }}>\r\n                    Start Listening</button>\r\n                <button className=\"btn btn-danger m-2\" onClick={() => handlepause()}>Stop Listening</button>\r\n                <button className=\"btn btn-danger m-2\" onClick={() => { readOut(\"Hello World\") }}>Start Speech</button>\r\n                <div className=\"commands in_middle hide_on_small\"></div>\r\n                <div className=\"userText\">\r\n                    <h4 style={{ fontFamily: \"Roboto\" }} className=\"m-3 text-primary\">{text}</h4>\r\n                    {/* <h4 style={{ fontFamily: \"Roboto\" }} className=\"m-3 text-primary\">Lorem ipsum dolor sit amet consectetur.</h4> */}\r\n                </div>\r\n                <div className=\"weather\">\r\n                    {showingweather ? <Weatherinfo temp={weatherinfo.temp} name={weatherinfo.name} country={weatherinfo.country} /> : null}\r\n                </div>\r\n                <div className=\"container\">\r\n                    {isListening ? <h3>Listening...</h3> : null}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport '../css/Navbar.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                    <div className=\"container-fluid\">\r\n                        <b>\r\n                            <NavLink exact className=\"navbar-brand\" to=\"/\">Voice Assistant</NavLink>\r\n                        </b>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink exact className=\"nav-link \" aria-current=\"page\" to=\"/how-to-use\">How to use?</NavLink>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Docs from './Docs';\r\nimport Home from './Home';\r\nimport Navbar from './Navbar'\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Navbar />\r\n                <Switch>\r\n                    <Route path=\"/\"><Home /></Route>\r\n                    <Route path=\"/how-to-use\"><Docs /></Route>\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom'\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\"\r\nimport App from './components/App'\r\nimport \"./css/app.css\"\r\n\r\nReactDom.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}